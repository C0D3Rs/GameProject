@model Affix

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Affix</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, EnumHelper.GetSelectList<AffixType>())
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForWeapon, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ForWeapon)
                @Html.ValidationMessageFor(model => model.ForWeapon)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForShield, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ForShield)
                @Html.ValidationMessageFor(model => model.ForShield)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForArmor, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ForArmor)
                @Html.ValidationMessageFor(model => model.ForArmor)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForJewelry, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ForJewelry)
                @Html.ValidationMessageFor(model => model.ForJewelry)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinStrength, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinStrength)
                @Html.ValidationMessageFor(model => model.MinStrength)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxStrength, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxStrength)
                @Html.ValidationMessageFor(model => model.MaxStrength)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QualityLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QualityLevel)
                @Html.ValidationMessageFor(model => model.QualityLevel)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
