@model WeaponItemViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create Weapon</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, EnumHelper.GetSelectList<WeaponType>())
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinDamage, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinDamage)
                @Html.ValidationMessageFor(model => model.MinDamage)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxDamage, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxDamage)
                @Html.ValidationMessageFor(model => model.MaxDamage)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChanceToHit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChanceToHit)
                @Html.ValidationMessageFor(model => model.ChanceToHit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttackSpeed, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AttackSpeed)
                @Html.ValidationMessageFor(model => model.AttackSpeed)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequireStrength, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequireStrength)
                @Html.ValidationMessageFor(model => model.RequireStrength)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QualityLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QualityLevel)
                @Html.ValidationMessageFor(model => model.QualityLevel)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Durability, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Durability)
                @Html.ValidationMessageFor(model => model.Durability)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
