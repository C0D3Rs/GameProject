@model PagedList.IPagedList<Monster>

@{
    ViewBag.Title = "Index";
}

<h2>Monster</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>Nazwa</th>
        <th>Poziom</th>
        <th>Życie</th>
        <th>Obrażenia</th>
        <th>Obrona</th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Level)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Life)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MinDamage) -
            @Html.DisplayFor(modelItem => item.MaxDamage)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Defense)
        </td>
        <td>
            @Html.ActionLink("Ustaw Obrazek", "Set", "Image", new { category = ImageCategory.Monster, id = item.Id }, null)
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}
</table>

Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
